{"ast":null,"code":"var _jsxFileName = \"D:\\\\Memoire\\\\frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/AuthContext.jsx\n\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n\n  // Au démarrage : vérifie si un token est présent\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const decoded = jwtDecode(token);\n          setUser({\n            ...decoded,\n            token\n          });\n        }\n      } catch (error) {\n        console.error(\"Erreur lors du décodage du token\", error);\n        localStorage.removeItem('token');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Connexion : enregistre token + redirige selon le rôle\n  const login = userData => {\n    try {\n      const {\n        token\n      } = userData;\n      const decoded = jwtDecode(token);\n      setUser({\n        ...decoded,\n        token\n      });\n      localStorage.setItem('token', token);\n\n      // Redirection en fonction du rôle\n      switch (decoded.role) {\n        case 'admin':\n        case 'ministere':\n          navigate('/ministere/mihome');\n          break;\n        case 'entreprise':\n          navigate('/entreprise/home');\n          break;\n        default:\n          navigate('/home');\n      }\n    } catch (error) {\n      console.error(\"Erreur lors de la connexion\", error);\n      throw error;\n    }\n  };\n\n  // Déconnexion : supprime token et utilisateur\n  const logout = () => {\n    try {\n      setUser(null);\n      localStorage.removeItem('token');\n      navigate('/login');\n    } catch (error) {\n      console.error(\"Erreur lors de la déconnexion\", error);\n      throw error;\n    }\n  };\n  const isAuthenticated = () => !!user;\n  const value = {\n    user,\n    isLoading,\n    login,\n    logout,\n    isAuthenticated\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !isLoading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook sécurisé\n_s(AuthProvider, \"o5QfC7aYrUkj9YQ0lGSakMfCddo=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth doit être utilisé à l'intérieur d'un AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","useNavigate","jwtDecode","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","isLoading","setIsLoading","navigate","initializeAuth","token","localStorage","getItem","decoded","error","console","removeItem","login","userData","setItem","role","logout","isAuthenticated","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Memoire/frontend/src/context/AuthContext.jsx"],"sourcesContent":["// src/context/AuthContext.jsx\r\n\r\nimport { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { jwtDecode } from 'jwt-decode';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Au démarrage : vérifie si un token est présent\r\n  useEffect(() => {\r\n    const initializeAuth = () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const decoded = jwtDecode(token);\r\n          setUser({ ...decoded, token });\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors du décodage du token\", error);\r\n        localStorage.removeItem('token');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Connexion : enregistre token + redirige selon le rôle\r\n  const login = (userData) => {\r\n    try {\r\n      const { token } = userData;\r\n      const decoded = jwtDecode(token);\r\n      setUser({ ...decoded, token });\r\n      localStorage.setItem('token', token);\r\n\r\n      // Redirection en fonction du rôle\r\n      switch (decoded.role) {\r\n        case 'admin':\r\n        case 'ministere':\r\n          navigate('/ministere/mihome');\r\n          break;\r\n        case 'entreprise':\r\n          navigate('/entreprise/home');\r\n          break;\r\n        default:\r\n          navigate('/home');\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la connexion\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Déconnexion : supprime token et utilisateur\r\n  const logout = () => {\r\n    try {\r\n      setUser(null);\r\n      localStorage.removeItem('token');\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.error(\"Erreur lors de la déconnexion\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const isAuthenticated = () => !!user;\r\n\r\n  const value = {\r\n    user,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    isAuthenticated,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!isLoading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook sécurisé\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth doit être utilisé à l'intérieur d'un AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}